{
  "swagger": "2.0",
  "info": {
    "description": "Blue Sky API Docs",
    "version": "1.0.0",
    "title": "Blue Sky API",
    "termsOfService": "",
    "contact": {
      "email": "ollie.tinsley@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "ec2-34-207-1-89.compute-1.amazonaws.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "group",
      "description": "Group Information"
    },
    {
      "name": "network",
      "description": "Network of a user/group/organization"
    },
    {
      "name": "organization",
      "description": "Organization Information"
    },
    {
      "name": "user",
      "description": "User Information"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/groups": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get all groups",
        "description": "",
        "operationId": "getGroups",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          },
          "404": {
            "description": "No groups exist"
          },
          "500": {
            "description": "API connection error"
          }
        }
      },
      "post": {
        "tags": [
          "group"
        ],
        "summary": "Add a group",
        "description": "",
        "operationId": "createGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "group",
            "description": "The group to create.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group succesfully created",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Group name required"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get group by id",
        "operationId": "getGroupById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Group id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No group exists with id"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/groups/organization/{organizationId}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Get groups by organization id",
        "operationId": "getGroupsByOrganizationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of org to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          },
          "400": {
            "description": "Organization id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No groups exist for organization"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get all organizations",
        "description": "",
        "operationId": "getOrganizations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organization"
              }
            }
          },
          "404": {
            "description": "No organizations exist"
          },
          "500": {
            "description": "API connection error"
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Add an organization",
        "description": "",
        "operationId": "createOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "organization",
            "description": "The organization to create.",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization succesfully created",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Missing required parameter",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get organization by id",
        "operationId": "getOrganizationById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of organization to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Organization id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No organization exists with id"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/organizations/location": {
      "put": {
        "tags": [
          "organization"
        ],
        "summary": "Add map location for organization",
        "operationId": "setOrganizationLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Map cordinates to add to organization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Missing required parameter",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No organization exists with id"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/network": {
      "post": {
        "tags": [
          "network"
        ],
        "summary": "Add a network",
        "description": "",
        "operationId": "createNetwork",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "network",
            "description": "The network to create.",
            "schema": {
              "$ref": "#/definitions/Network"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Network succesfully created"
          },
          "400": {
            "description": "Network name required"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/network/user/{userId}": {
      "get": {
        "tags": [
          "network"
        ],
        "summary": "Get network by user id",
        "operationId": "getNetworkByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return network",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Network id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No network exists with id"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/network/group/{groupId}": {
      "get": {
        "tags": [
          "network"
        ],
        "summary": "Get network by group id",
        "operationId": "getNetworkByGroupId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of org to return network",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Organization id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No network exist for organization"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/network/organization/{organizationId}": {
      "get": {
        "tags": [
          "network"
        ],
        "summary": "Get network by organization id",
        "operationId": "getNetworkByOrganizationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of org to return network",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Organization id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No network exist for organization"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "No users exist"
          },
          "500": {
            "description": "API connection error"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add an user",
        "description": "",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to create.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User succesfully created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Missing required parameter",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by id",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "User id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No user exists with id"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/users/group/{groupId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get users by group",
        "operationId": "getUserByGroupId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group to return all users",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Group id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No users exist"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/users/organization/{organizationId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get users by organization",
        "operationId": "getUserByOrganizationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of org to return all users",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Org id required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No users exists"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    },
    "/users/location": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Add map location for user",
        "operationId": "setUserLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Map cordinates to add to organization",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Missing required parameter",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "No user exists with id"
          },
          "500": {
            "description": "API connection error"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "optional": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "updateDate": {
          "type": "string"
        }
      }
    },
    "LocationCriteria": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "lat": {
          "type": "number"
        },
        "lng": {
          "type": "number"
        }
      }
    },
    "Network": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "childId": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "groupId": {
          "type": "number"
        },
        "organizationId": {
          "type": "number"
        },
        "parentId": {
          "type": "number"
        },
        "userId": {
          "type": "number"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lng": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "updateDate": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "currentPage": {
          "type": "number"
        },
        "firstRecord": {
          "type": "number"
        },
        "lastRecord": {
          "type": "number"
        },
        "nextPage": {
          "type": "number"
        },
        "numberPerPage": {
          "type": "number"
        },
        "pages": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "previousPage": {
          "type": "number"
        },
        "totalPages": {
          "type": "number"
        },
        "viewOptions": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "SortCriteria": {
      "type": "object",
      "properties": {
        "dir": {
          "type": "string"
        },
        "col": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "createDate": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "groupId": {
          "type": "number"
        },
        "lastName": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lng": {
          "type": "number"
        },
        "middleName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkId": {
          "type": "number"
        },
        "organizationName": {
          "type": "string"
        },
        "organizationId": {
          "type": "number"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "updateDate": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
